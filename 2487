/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* removeNodes(ListNode* head) {
        if(head==NULL){
            return NULL;
        }
        vector<int> nums;
        while(head!=NULL){
            nums.push_back(head->val);
            head = head->next;
        }
        stack<int> stack;
        for(int i=nums.size()-1; i>=0; i--){
            if(stack.empty()){
                stack.push(nums[i]);
            }
            else{
                if(stack.top()<=nums[i]){
                    stack.push(nums[i]);
                }
            }
        }
        nums.clear();
        while(!stack.empty()){
            nums.push_back(stack.top());
            stack.pop();
        }
        head = new ListNode(nums[nums.size()-1]);
        for(int i=nums.size()-2; i>=0; i--){
            ListNode* ptr = new ListNode(nums[i]);
            ptr->next = head;
            head = ptr;
        }
        return head;
    }
};
