class Solution {
public:
    void gameOfLife(vector<vector<int>>& board) {
        vector<int> string(board.size(),0);
        vector<vector<int>> boards(board.size(),string);

        for(int i=0; i<board.size(); i++){
            for(int j=0; j<board.size(); j++){
                cout << boards[i][j] << " ";
            }
            cout << endl;
        }
        
        for(int i=0; i<board.size(); i++){
            for(int j=0; j<board.size(); j++){
                boards[i][j] = board[i][j];
            }
        }
        for(int i=0; i<board.size(); i++){
            for(int j=0; j<board.size(); j++){
                cout << boards[i][j] << " ";
            }
            cout << endl;
        }
        for(int i=0; i<boards.size(); i++){
            for(int j=0; j<boards.size(); j++){
                unordered_map <int,int> map;
                if(i-1>=0){
                    if(j-1>=0){
                        map[boards[i-1][j-1]]+=1;
                    }
                    if(j>=0){
                        map[boards[i-1][j]]+=1;
                    }
                    if(j+1>=0 && j+1<board.size()){
                        map[boards[i-1][j+1]]+=1;
                    }
                }
                if(i>=0){
                    if(j-1>=0){
                        map[boards[i][j-1]]+=1;
                    }
                    if(j+1>=0 && j+1<board.size()){
                        map[boards[i][j+1]]+=1;
                    }
                }
                if(i+1>=0){
                    if(j-1>=0){
                        map[boards[i][j-1]]+=1;
                    }
                    if(j>=0){
                        map[boards[i][j]]+=1;
                    }
                    if(j+1>=0 && j+1<board.size()){
                        map[boards[i][j+1]]+=1;
                    }
                }
                if(i==1 && j==0){
                    cout << map[1];
                }
                int k = boards[i][j];
                if(k){
                    if(map[1]==2 || map[1]==3){
                        
                    }
                    else{
                        board[i][j] = 0;
                    }
                }
                else{
                    if(map[1]==3){
                        board[i][j] = 1;
                    }
                }
                cout << board[i][j] << endl;
            }
        }
    }
};
