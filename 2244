class Solution {
public:
    int minimumRounds(vector<int>& tasks) {
        int round = 0;
        sort(tasks.begin(),tasks.end());
        unordered_map<int,int> map;
        for(int i=0; i<tasks.size(); i++){
            map[tasks[i]] += 1;
        }
        for (auto& x: map) {
            if(x.second == 2 || x.second == 3){
                round++;
                map[x.first] = 0;
            }
            else if(x.second == 1){
                return -1;
            }
            else{
                round+=(x.second/3);
                if(x.second%3!=0){
                    round++;
                }
            }
            std::cout << x.first << " => " << x.second << '\n';
        }  
        return round;
    }
};
