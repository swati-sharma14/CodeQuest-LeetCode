/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<TreeNode*> nodes; 

    void InorderRecursive(TreeNode *root){
        if (root == NULL){
            return;
        }
        InorderRecursive(root->left);
        nodes.push_back(root);
        InorderRecursive(root->right);
    }

    int rangeSumBST(TreeNode* root, int low, int high) {
        InorderRecursive(root);
        int sum = 0;
        for(int i=0; i<nodes.size(); i++){
            if(nodes[i]->val<=high && nodes[i]->val>=low){
                sum+=nodes[i]->val;
            }
        }
        return sum;
    }
};
