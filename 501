/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> findMode(TreeNode* root) {
        unordered_map<int,int> map;
        queue<TreeNode*> sta;
        sta.push(root);
        while(!sta.empty()){
            TreeNode* ptr = sta.front();
            map[ptr->val]+=1;
            sta.pop();
            if(ptr->left!=NULL){
                sta.push(ptr->left);
            }
            if(ptr->right!=NULL){
                sta.push(ptr->right);
            }
        }
        int max = 0;
        for(auto& x:map){
            if(x.second>max){
                max = x.second;
            }
        }
        vector<int> nums;
        for(auto& x:map){
            if(x.second == max){
                nums.push_back(x.first);
            }
        }
        return nums;
    }
};
