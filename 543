/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int height(TreeNode* root, int& a){
        if(root==NULL){
            return 0;
        }
        int left = height(root->left,a);
        int right = height(root->right,a);
        a = max(a,1+left+right);
        return (1+max(left,right));

    }
    int diameterOfBinaryTree(TreeNode* root) {
        int a = 0;
        int h = height(root,a);
        return a-1;
    }
};


