/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int minDiffInBST(TreeNode* root) {
        vector<int> nums;
        queue<TreeNode*> sta;

        sta.push(root);
        while(!sta.empty()){
            TreeNode* ptr = sta.front();
            nums.push_back(ptr->val);
            sta.pop();
            if(ptr->left!=NULL){
                sta.push(ptr->left);
            }
            if(ptr->right!=NULL){
                sta.push(ptr->right);
            }
        }
        sort(nums.begin(),nums.end());
        int min = 100001;
        for(int i=0; i<nums.size()-1; i++){
            if((nums[i+1]-nums[i])<min){
                min = nums[i+1] - nums[i];
            }
        }
        return min;
    }
};
